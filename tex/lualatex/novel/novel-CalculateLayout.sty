%%
%% This is file `novel-CalculateLayout.sty', a custom file.
%% Copyright 2017 Robert Allgeyer.
%% 
%% It may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either version 1.3c
%% of this license or (at your option) any later version.
%% The latest version of this license is in
%%    http://www.latex-project.org/lppl.txt
%% and version 1.3c or later is part of all distributions of LaTeX
%% version 2005/12/01 or later.
%% 
%%
\ProvidesFile{novel-CalculateLayout.sty}%
[2017/12/25 v1.46.5k LaTeX file (layout calculations)]
%%

%%
%% This file is loaded \AtEndPreamble, which precedes \AtBeginDocument.
%%


%% PROVIDE DEFAULT SIZES AND LINESPERPAGE, IF NOT SET BY USER
%% ---------------------------------------------------------------------------
% Default Media Size is provided lower on this page, during Finalize Layout.
% Default Trim Size is 5.5in W x 8.5in H, unless \SetTrimSize used.
% This size is typical of American P.O.D. softcover fiction:
\if@TrimSizeSet\else
  \gsetlength\@SetTrimWidth{5.5in}
  \gsetlength\@SetTrimHeight{8.5in}
\fi
% Default margins based on Trim Size, unless \SetMargins used:
\if@MarginsSet\else
  \ifthenelse{\dimtest{\@SetTrimHeight}{<}{8.99in}}{ % small sizes:
    \gsetlength\@SetTopMargin{0.5in}
    \gsetlength\@SetOuterMargin{0.5in}
    \gsetlength\@SetBottomMargin{0.5in}
    \gsetlength\@SetInnerMargin{0.75in}
  }{ % medium sizes:
    \ifthenelse{\dimtest{\@SetTrimHeight}{<}{9.99in}}{
      \gsetlength\@SetTopMargin{0.75in}
      \gsetlength\@SetOuterMargin{0.75in}
      \gsetlength\@SetBottomMargin{0.75in}
      \gsetlength\@SetInnerMargin{1in}
    }{ % large sizes:
      \gsetlength\@SetTopMargin{1in}
      \gsetlength\@SetOuterMargin{1in}
      \gsetlength\@SetBottomMargin{1in}
      \gsetlength\@SetInnerMargin{1.25in}
    } %
  } %
\fi
% Default font size is based on Trim Width:
\if@FontSizeSet\else
  \ifdimcomp{\@SetTrimWidth}{<}{5.49in}{
    \gsetlength\@SetFontSize{11pt} % smaller books
  }{
    \ifdimcomp{\@SetTrimWidth}{<}{6.24in}{
      \gsetlength\@SetFontSize{11.4pt} % medium books
    }{
      \gsetlength\@SetFontSize{12pt} % larger books
    } %
  } %
\fi
\newlength\@WorkingHeight % area containing header, text, footer,
\gsetlength\@WorkingHeight{\@SetTrimHeight-\@SetTopMargin-\@SetBottomMargin-1.3\@SetFontSize}
\gsetlength\textwidth{\@SetTrimWidth-\@SetOuterMargin-\@SetInnerMargin}
% Provide \@LinesPerPage, if not set:
\if@LinesPerPageSet\else
  % \SetLinesPerPage not used: Estimate \baselineskip as 1.3\@SetFontSize.
  % Calculate resulting \@LinesPerPage, then proceed as if set.
  \gsetlength\baselineskip{1.3\@SetFontSize} % comfortable skip
  \FPdiv{\@LinesPerPage}{\strip@pt\@WorkingHeight}{\strip@pt\baselineskip}
  \FPsub{\@LinesPerPage}{\@LinesPerPage}{0.3} % clearance for last line descenders
  \if@HasHeader\FPsub{\@LinesPerPage}{\@LinesPerPage}{\@HeadJump}\fi
  \if@HasFooter\FPsub{\@LinesPerPage}{\@LinesPerPage}{\@FootJump}\fi
  \FPtrunc{\@LinesPerPage}{\@LinesPerPage}{0} % integer floor
\fi
% Error if too few lines per page:
\FPiflt{\@LinesPerPage}{10}
  \ClassError{novel}{Calculated LinesPerPage less than 10}%
   {Default LinesPerPage is calculated from font size, available text height. ^^J%
    Too few lines. Either font too big, or text height too small.}%
\fi
%% end provide default sizes.


% Calculate \baselineskip:
\def\@AdjLPP{\@LinesPerPage}
\FPsub\@AdjLPP{\@AdjLPP}{1} % remove the final baselineskip
\if@HasHeader\FPadd\@AdjLPP{\@AdjLPP}{\@HeadJump}\fi
\if@HasFooter\FPadd\@AdjLPP{\@AdjLPP}{\@FootJump}\fi
\FPdiv{\@tempN}{1}{\@AdjLPP}
\gsetlength\baselineskip{\@tempN\@WorkingHeight} % tentative
\FPtrunc\@BaselineSkipN{\strip@pt\baselineskip}{2} % round downward to 2 decimal places
\gsetlength\baselineskip{\@BaselineSkipN pt} % final, unless reworked

%
% Error if \baselineskip is too tight, in relation to font size:
\ifdimcomp{\baselineskip}{<}{1.2\@SetFontSize}{%
  \ClassError{novel}{Calculated baselineskip is too small}%
   {Default baselineskip is calculated from font size, available text height, ^^J%
    and LinesPerPage setting. But resulting skip is too small. ^^J%
    Change something, then try again.}%
}{}%
%% end calculate baselineskip.


%% LOAD REWORK, IF USED
%% -----------------------------------------------------------------------------
\if@TrimSizeRework
  \RequirePackage{novel-ReworkLayout}
\else
  \if@MarginsRework
    \RequirePackage{novel-ReworkLayout}
  \else % use the values already calculated on this page
    \gsetlength\@TrimWidth{\@SetTrimWidth}
    \gsetlength\@TrimHeight{\@SetTrimHeight}
    \gsetlength\@TopMargin{\@SetTopMargin}
    \gsetlength\@OuterMargin{\@SetOuterMargin}
    \gsetlength\@BottomMargin{\@SetBottomMargin}
    \gsetlength\@InnerMargin{\@SetInnerMargin}
    \gsetlength\@FontSize{\@SetFontSize}
  \fi
\fi
%% END LOAD REWORK


%% FINALIZE LAYOUT
%% -----------------------------------------------------------------------------
% Default Media Size is same as Trim Size, unless \SetMediaSize used:
\if@MediaSizeSet\else
    \gdef\@AlignTrim{center}
    \gsetlength\paperwidth{\@TrimWidth}
    \gsetlength\paperheight{\@TrimHeight}
\fi
% \textheight, normal font size, etc:
\gsetlength\textheight{\@LinesPerPage\baselineskip}
\renewcommand\normalsize{%
  \@setfontsize\normalsize{\strip@pt\@FontSize}{\baselineskip}%
}
\normalsize % from this point, the "real" normal font size is effective
%
\if@HasHeader
  \gsetlength\headheight{1.3\@FontSize} % 1em above baseline, 0.3em below
  % Correct headsep for extra headjump baselineskip and header descender:
  \gsetlength\headsep{\@HeadJump\baselineskip-\baselineskip-0.3\@FontSize}
\else
  \gsetlength\headheight{0pt}
  \gsetlength\headsep{0pt}
\fi
%
% \oddsidemargin is at the left (inner, spine edge) of recto pages.
% Measured 1in (72.27pt) inside the MediaBox, to the textblock. May be negative.
\ifthenelse{\equal{\@AlignTrim}{corner}}{%
  \gsetlength\oddsidemargin{\@InnerMargin-72.27pt}
}{%
  \gsetlength\oddsidemargin{\@InnerMargin+0.5\paperwidth-0.5\@TrimWidth-72.27pt}
}%
%
% \evensidemargin is at the left (outer edge) of verso pages.
\ifthenelse{\equal{\@AlignTrim}{corner}}{%
  \gsetlength\evensidemargin{\@OuterMargin-72.27pt}
}{%
  \gsetlength\evensidemargin{\@OuterMargin+0.5\paperwidth-0.5\@TrimWidth-72.27pt}
}%
%
\if@closecrop
  \gsetlength\oddsidemargin{-0.9in}
  \gsetlength\evensidemargin{-0.9in}
\fi
%
% \topmargin is measured from 1in (72.27pt) below the top of the MediaBox,
%   to the top of whatever comes first (header or textblock). May be negative.
% For consistency, the topmost baseline (header or main text) will be positioned
%   at 1em below the margin.
\ifthenelse{\equal{\@AlignTrim}{corner}}{%
  \gsetlength\topmargin{\@TopMargin-72.27pt}
  \if@HasHeader\else
    \gsetlength\topmargin{\topmargin-\baselineskip+\@FontSize}
  \fi
}{%
  \gsetlength\topmargin{\@TopMargin+0.5\paperheight-0.5\@TrimHeight-72.27pt}
  \if@HasHeader\else
    \gsetlength\topmargin{\topmargin-\baselineskip+\@FontSize}
  \fi
}%
% It seems that, unless specified by user, TeX will place the top text baseline
%   in a vertical position that depends on the height of text in that line.
% That height will vary, depending on ascenders or diacriticals there.
% In order to fix the position, \topskip gets a non-flexible setting.
% The best value is normal baselineskip, partly because it looks right,
%   and also to avoid underfull vboxes on nearly every page.
\gsetlength\topskip{\baselineskip}
%
% In `novel' class, footers are done in an unusual manner. The position of
% the footer baseline is fixed, regardless of the desired jump between text
% and footer. Then, the content (if any) of the footer is relatively positioned
% using \smash and \raisebox.
\gsetlength\footskip{\baselineskip}


%% Sanity check: Trim Size must be contained within Media Size.
\ifthenelse{%
  \dimtest{\@TrimWidth}{>}{\paperwidth} %
  \OR \dimtest{\@TrimHeight}{>}{\paperheight}%
}{%
  \ClassError{novel}{Media Size too small for TrimSize}%
  {You wrote \string\SetMediaSize\space with length(s) too small ^^J%
   for the default Trim Size or your values in \string\SetTrimSize.}%
}{}
%% end sanity check



%%
%% End of file `novel-CalculateLayout.sty'.


