%%
%% This is file `novel-Images.sty', part of class `novel'.
%% Copyright 2017 Robert Allgeyer.
%%
%% 
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either version 1.3c
%% of this license or (at your option) any later version.
%% The latest version of this license is in
%%    http://www.latex-project.org/lppl.txt
%% and version 1.3c or later is part of all distributions of LaTeX
%% version 2005/12/01 or later.
%% 
%%
\ProvidesFile{novel-Images.sty}%
[2018/01/07 v1.46.5x LaTeX file (image placement)]
%%


%% In `novel', images are handled with a view to preserving uniform line grid.
%% Normally, a work of fiction has no (or very few) images within the main
%%   body of text. Images are more likely on display pages (such as title page)
%%   or in chapter starts, or maps.

%% There are two ways to place an image: inline, or float.
%% Inline image does not occupy its own block, but mingles with flowing text.
%% Float image occupies its own block, which will be placed where the command
%%   is written, if it fits on that page. If it doesn't fit, then it will be
%%   placed at the top of the following page. Surrounding text will be
%%   typeset so at to not leave a big gap. Althouth TeX allows several
%%   options for positioning a float, `novel' only allows one method.

%% Be sure to read the separate documentation about how to prepare images.
%% In general: (1) png or jpg only. (2) Flattened, no transparency.
%% (3) 300dpi (grayscale) or 600dpi (black/white) are industry norms.
%% (4) Image file must contain its resolution. (5) Exact size, without scaling.
%% (6) No private metadata. (7) Be sure grayscale is 1-channel, not rgb gray.


% Pertains to images:
\newlength\imagewidth
\newlength\imageheight
\newlength\imagehoffset
\newlength\imagevoffset
\newlength\@imagewidth
\newlength\@imageheight
\newlength\@imagehoffset
\newlength\@imagevoffset
\newlength\@mytotalht

% Duplicated from settings:
\setlength\floatsep{0pt}
\setlength\textfloatsep{0pt}
\setlength\dbltextfloatsep{0pt}
\setlength\intextsep{0pt}

%% New in version 1.2: cover image.
\newcommand\SetCoverImage[1]{
  \@tempTFfalse
  \IfSubStr{#1}{jpg}{\@tempTFtrue}{}
  \IfSubStr{#1}{jpeg}{\@tempTFtrue}{}
  \IfSubStr{#1}{JPG}{\@tempTFtrue}{}
  \IfSubStr{#1}{JPEG}{\@tempTFtrue}{}
  \if@tempTF%
    \gdef\novelcoverimage{#1}
  \else%
    \ClassError{novel}{Cover image has wrong file extension}%
    {Cover image must be jpg, JPG, jpeg, or JPEG.}
  \fi%
} % end \SetCoverImage
%%


% New in version 1.44:
% If an image fails to have its resolution declared inside the file,
%   this value will be the assumed resolution.
\gdef\@novereserror{%
  \ClassError{novel}{\string\SetFlexResolution\space bad value}%
  {Resolution dpi must be integer from 200 to 9600. Default 300.}%
}
\newcommand\SetFlexResolution[1]{
  \IfInteger{#1}{ %
    \FPiflt{#1}{200}\@novereserror\else\fi % not enough
    \FPifgt{#1}{9600}\@novereserror\else\fi % too much
    \gdef\@novimgres{#1} %
  }{ %
    \@novreserror %
  } %
}%
\SetFlexResolution{300} % default dpi
%
\gdef\@ActivateFlexResolution{% called by `novel.cls' \AtEndPreamble
  \pdfimageresolution=\@novimgres % from \SetFlexResolution. Default 300.
  \LetLtxMacro\SetFlexResolution\relax % cannot use past Preamble
}%
%
\gdef\imagestarred{false}
\gdef\imagefilename{unknown}
% Neutralize \includegraphics, so it is no longer a user command:
\LetLtxMacro\novel@includegraphics\includegraphics\relax
\LetLtxMacro\includegraphics\relax
\newcommand\includegraphics[2][]{
  \ClassError{novel}{Cannot use \string\includegraphics\space on page \thepage}
   {The `novel' class has its own commands for placing images. See docs. ^^J%
    You cannot use the \string\includegraphics\space command.}%
}
%
\newcommand\pushtextdown[1]{% OBSOLETE
  \ifthenelse{\equal{#1}{} \OR \equal{#1}{ } \OR \equal{#1}{0}}{%
    \def\@howmuchdown{0em}%
  }{%
    \def\@howmuchdown{#1}%
  }%
  ~\par\vspace*{-\nbs}\vspace*{\@howmuchdown}\par%
}
%
\newcommand\@TestImageExtension[1]{%
  \@tempTFfalse%
  \IfEndWith{#1}{png}{\@tempTFtrue}{}%
  \IfEndWith{#1}{PNG}{\@tempTFtrue}{}%
  \IfEndWith{#1}{jpg}{\@tempTFtrue}{}%
  \IfEndWith{#1}{JPG}{\@tempTFtrue}{}%
  \IfEndWith{#1}{jpeg}{\@tempTFtrue}{}%
  \IfEndWith{#1}{JPEG}{\@tempTFtrue}{}%
  \if@tempTF\else%
    \ClassError{novel}{Image format `#1' not allowed, page \thepage}%
    {Image `#1' has file type not allowed in `novel' class. ^^J%
     Must have file extension png, jpg, jpeg (or capitalized). ^^J%
     Others such as pdf, bmp, tiff, eps, svg are not allowed. ^^J%
     The file extension is mandatory.}%
  \fi%
} %
%%


%% INLINE IMAGE
%% ----------------------------------------------------------------------------
% \InlineImage[xoffset,yoffset]{imagename.png} or jpg
% As the name implies, an inline image is used within the flow of text, rather
%   than in its own block. It may be used in main body, header, and footer.
% Macros such as \imagefilename, \imagewidth, etc.
%   are only set or re-set when the image in in the body. That prevents an
%   intervening header/footer image from over-writing values set by%
%   the most recent body image.
% Without offsets, the image is positioned with is left edge at the cursor,
%   and its top edge at the text baseline. Positive offsets are right and up.
% If improperly positioned, the image can overlie (obscure) text that was
%   previously placed. This is rarely desirable and may be flagged by
%   some print services, because it looks wrong.
% The image will underlie anything that follows. This may be used as a
%   special effect, if allowed by the print service (probably OK).
% With the un-starred command, the image occupies its natural cursor width.
% With the starred command, the image occupies zero cursor width, so that
%   anything following will overlie it.
\DeclareDocumentCommand \InlineImage { s O{0pt} m }{%
  \@TestImageExtension{#3}%
  \StrDel{#2}{\space}[\@myila]%
  \StrCut{\@myila}{,}{\@myilxa}{\@myilya}%
  \ifthenelse{\equal{\@myilxa}{} \OR \equal{\@myilxa}{0}}{%
    \def\@myilx{0pt}}{\def\@myilx{\@myilxa}%
  }%
  \ifthenelse{\equal{\@myilya}{} \OR \equal{\@myilya}{0}}{%
    \def\@myily{0pt}}{\def\@myily{\@myilya}%
  }%
  \iftoggle{@inheadfoot}{}{\gdef\imagefilename{#3}}% for possible later use
  \gdef\@mygraphic{\novel@includegraphics[draft=false]{#3}}%
  \setlength\@imagewidth{\widthof{\@mygraphic}}%
  \global\@imagewidth=\@imagewidth%
  \iftoggle{@inheadfoot}{}{\setlength\imagewidth{\@imagewidth}}%
  \setlength\@imageheight{\heightof{\@mygraphic}}%
  \global\@imageheight=\@imageheight%
  \iftoggle{@inheadfoot}{}{%
    \setlength\imageheight{\@imageheight}%
    \global\imageheight=\imageheight%
    \typeout{^^JClass `novel' Info: %
      An image was placed on page \thepage. ^^J%
      Review layout to ensure that it does not overflow into margins. ^^J}%
  }%
  %
  \setlength\@imagehoffset{\@myilx}%
  \IfBeginWith{\@myily}{b}{%
    \StrDel[1]{\@myily}{b}[\temp@adjVoffseta]%
    \ifthenelse{\equal{\temp@adjVoffseta}{} \OR \equal{\temp@adjVoffseta}{0}}{%
      \def\temp@adjVoffset{0pt}}{\def\temp@adjVoffset{\temp@adjVoffseta}%
    }%
    \setlength\@imagevoffset{\temp@adjVoffset}%
  }{%
    \setlength\@imagevoffset{-\@imageheight}%
    \addtolength\@imagevoffset{\@myily}%
  }%
  %
  \IfBooleanTF{#1}%
  % starred:
  {%
    \iftoggle{@inheadfoot}{}{\gdef\imagestarred{true}}%
    \makebox[0pt][l]{%
      \hspace{\@imagehoffset}%
      \stake\smash{\raisebox{\@imagevoffset}{\@mygraphic}}%
    }%
  }%
  % unstarred:
  {%
    \iftoggle{@inheadfoot}{}{\gdef\imagestarred{false}}%
    \hspace{\@imagehoffset}%
    \stake\smash{\raisebox{\@imagevoffset}{\@mygraphic}}%
  }% end IfBooleanTF{#1}
  \iftoggle{@inheadfoot}{}{\setlength\imagehoffset{\@imagehoffset}}%
  \iftoggle{@inheadfoot}{}{\setlength\imagevoffset{\@imagevoffset}}%
} % 
% end Inline Image
%%


%% FLOAT IMAGE
%% ----------------------------------------------------------------------------
%% New in v.1.48. \FloatImage. Will always be centered.
% \FloatImage[floatmethod,xoffset,yoffset]{yourimagename.png} % or jpg
% This is a substitute for other floats. Does not require `float' package.
% Suggested offsets: [0pt,\nfs]. Suggested float method: either !ht or !b.
% The use of ! in the float method is recommended.
% Method !ht attempts to place the image where the code is written. But if it
%   doesn't fit on that page, it will float to the top of the next page.
% Method !b attempts to place the image on the bottom of the page where the
%   code is written. If not, it floats to the bottom of the next page.
% Allowed float method parameters: ! h t b  (but not p or H).
% Parsing the optional argument: comma-separated values, ignoring space.
%   May be empty before or between commas.
%   Example: [,,!b] is read as xoffset empty (defaults to 0pt),
%     yoffset empty (defaults to 0pt), float method !b.
%   Example: [!b] is invalid, because a single value should be xoffset.
\providecommand*\floatlocation[2]{\@namedef{fps@#1}{#2}}
\floatlocation{figure}{!ht} % default
\gdef\ftype@figure{1} % mystery TeX code
\DeclareDocumentCommand \FloatImage { s O{} m } {% starred not in use
  \iftoggle{@inheadfoot}{%
    \ClassError{novel}{Cannot use FloatImage in header or footer}%
      {Header footer allow InlineImage but not FloatImage.}%
  }{}%
  \@TestImageExtension{#3}%
  % Sadly, parsing with `xstring' involves roundabout code:
  \StrDel{#2}{\space}[\@tempArgs]%
  \StrCut{\@tempArgs}{,}{\@tempArgA}{\@tempArgX}%
    \StrCut{\@tempArgX}{,}{\@tempArgB}{\@tempArgC}%
    \ifthenelse{\equal{\@tempArgA}{}}{\def\@tempArgAa{!ht}}{\def\@tempArgAa{\@tempArgA}}%
    \ifthenelse{\equal{\@tempArgB}{0} \OR \equal{\@tempArgB}{}}{\def\@tempArgBb{0pt}}{\def\@tempArgBb{\@tempArgB}}%
    \ifthenelse{\equal{\@tempArgC}{0} \OR \equal{\@tempArgC}{}}{\def\@tempArgCc{0pt}}{\def\@tempArgCc{\@tempArgC}}%
    \StrSubstitute{\@tempArgAa}{H}{!h}[\@tempArgAA]%
    \floatlocation{figure}{\@tempArgAA}% current float method
    \@float{figure}%
  \@FloatImage{\@tempArgBb}{\@tempArgCc}{#3}%
  \end@float\par%
  \floatlocation{figure}{!ht}% restore default float method
} %
%
\DeclareDocumentCommand \@FloatImage { m m m }{% DO NOT CALL DIRECTLY
  \gdef\@mygraphic{\novel@includegraphics[draft=false]{#3}}%
  \gsetlength\@imagewidth{\widthof{\@mygraphic}}%
  \gsetlength\@imageheight{\heightof{\@mygraphic}}%
  \setlength\@imagehoffset{#1}%
  \setlength\@imagevoffset{#2-\@imageheight}%
  \setlength\@mytotalht{\@imageheight-#2+\nfs}%
  \FPdiv{\@mytotalhtN}{\strip@pt\@mytotalht}{\strip@pt\nbs}%
  \FPadd{\@mytotalhtN}{\@mytotalhtN}{0.5}% round upward
  \FPround{\@mytotalhtN}{\@mytotalhtN}{0}% to integer
  \FPmin{\@allowmyoverflow}{\@mytotalhtN}{\@LinesPerPage}% not exceeding lpp
  % If the image is too tall for a page, that will be ignored.
  % This prevents TeX from pushing the float to a later page.
  \begin{linegap}{\@allowmyoverflow}%
  %
    {\centering%
      \makebox[0pt][l]{%
        \hspace{\dimexpr\@imagehoffset-0.5\@imagewidth}%
        \stake\smash{\raisebox{\@imagevoffset}{\@mygraphic}}%
      }%
    \par}%
    \vspace*{-\nbs}%
  \end{linegap}%
} % 
% end Float Image
%%


%% BLOCK IMAGE (OBSOLETE)
%% ----------------------------------------------------------------------------
%% \BlockImage[alignment]{image}[text]
%% OBSOLETE FROM VERSION 1.48. USE \FloatImage INSTEAD.
%% If you have a document that uses this, it will continue to work.
%% However, it is no longer documented. Do not use in new documents.
\DeclareDocumentCommand \BlockImage { O{c} m +O{} }{% OBSOLETE
  \ClassWarning{novel}{^^J\string\BlockImage\space command is obsolete. ^^J%
    It will remain in effect for existing documents that use it. ^^J%
    New documents must use \string\FloatImage\space instead. ^^J%
    Purpose and syntax is slightly different. See docs. ^^J}%
  \iftoggle{@inheadfoot}{%
    \ClassError{novel}{Cannot use BlockImage in header or footer}%
      {Header footer allow InlineImage but not BlockImage.}%
  }{}%
  \@TestImageExtension{#2}%
  % Allows empty or blank to be used, and still provide default values:
  \ifthenelse{\equal{#1}{} \OR \equal{#1}{\space}}{%
    \def\@myargs{c}}{\def\@myargs{#1}%
  }%
  \StrDel{\@myargs}{\space}[\@myargsns]% needs {\space} not { }
  \StrCut{\@myargsns}{,}{\@myalign}{\@mycoord}%
  \StrCut{\@mycoord}{,}{\@myxt}{\@myyt}%
  \ifthenelse{\equal{\@myxt}{}\OR\equal{\@myxt}{0}}{%
    \def\@myx{0pt}}{\def\@myx{\@myxt}%
  }%
  \ifthenelse{\equal{\@myyt}{}\OR\equal{\@myyt}{0}}{%
    \def\@myy{0pt}}{\def\@myy{\@myyt}%
  }%
  %
  \gdef\@mygraphic{\novel@includegraphics[draft=false]{#2}}%
  \setlength\@imagewidth{\widthof{\@mygraphic}}%
  \global\@imagewidth=\@imagewidth%
  \setlength\@imageheight{\heightof{\@mygraphic}}%
  \global\@imageheight=\@imageheight%
  \setlength\@imagehoffset{\@myx}%
  \IfBeginWith{\@myy}{b}{%
    \ClassError{novel}{Cannot use voffset `b' on %
      \string\BlockImage, page \thepage}%
     {The `b' voffset only works with \string\InlineImage\space, %
      not \string\BlockImage.}%
  }{%
    \setlength\@imagevoffset{-\@imageheight}%
    \addtolength\@imagevoffset{\@myy}%
  }%
  %
  \setlength\@mytotalht{0pt}%
  \addtolength\@mytotalht{\@imageheight}%
  \addtolength\@mytotalht{-\@myy}%
  \addtolength\@mytotalht{1em}%
  \def\@mytotalhtN{\strip@pt\@mytotalht}%
  \FPdiv{\@mytotalhtN}{\@mytotalhtN}{\strip@pt\nbs}%
  \FPadd{\@mytotalhtN}{\@mytotalhtN}{0.5}%
  \FPround{\@mytotalhtN}{\@mytotalhtN}{0}%
  %
  \begin{linegap}{\@mytotalhtN}%
  %
  \ifthenelse{\equal{\@myalign}{c}\OR\equal{\@myalign}{}}{%
    {\centering%
      \makebox[0pt][l]{%
        \hspace{\dimexpr\@myx-0.5\@imagewidth}%
        \stake\smash{\raisebox{\dimexpr\@myy-\@imageheight}{\@mygraphic}}%
      }%
    \par}%
    \vspace*{-\nbs}%
    {\centering #3\par}%
  }{}%
  \ifthenelse{\equal{\@myalign}{r}}{%
    \noindent\makebox[0pt][l]{%
      \hspace{\dimexpr\textwidth+\@myx-\@imagewidth}%
      \stake\smash{\raisebox{\dimexpr\@myy-\@imageheight}{\@mygraphic}}%
    }\par%
    \vspace{-2\nbs}%
    \begin{adjustwidth}{0pt}{\@imagewidth+\parindent}%
      \strut\par #3\par%
    \end{adjustwidth}%
  }{}%
  \ifthenelse{\equal{\@myalign}{l}}{%
    \noindent\makebox[0pt][l]{%
      \hspace{\@myx}%
      \stake\smash{\raisebox{\dimexpr\@myy-\@imageheight}{\@mygraphic}}%
    }\par%
    \vspace{-2\nbs}%
    \begin{adjustwidth}{\@imagewidth+\parindent}{0pt}%
      \strut\par #3\par%
    \end{adjustwidth}%
  }{}%
  \end{linegap}%
} % end \BlockImage (OBSOLETE)
%%





%%
%% End of file `novel-Images.sty'.


