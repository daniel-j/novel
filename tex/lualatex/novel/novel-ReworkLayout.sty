%%
%% This is file `novel-ReworkLayout.sty', a custom file.
%% Copyright 2017 Robert Allgeyer.
%% 
%% It may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, either version 1.3c
%% of this license or (at your option) any later version.
%% The latest version of this license is in
%%    http://www.latex-project.org/lppl.txt
%% and version 1.3c or later is part of all distributions of LaTeX
%% version 2005/12/01 or later.
%% 
%%
\ProvidesFile{novel-ReworkLayout.sty}%
[2018/01/08 v1.46.5y LaTeX file (reworked layout calculations)]
%%


%% This file may or may not be loaded, depending on whether any \Rework
%%   command was used. The decision is made within `novel-CalculateLayout.sty'.
%% Results of the rework are passed back to `novel-CalculateLayout.sty'
%%   to produce finished values.
%% Prior to v. 1.48, rework was entirely within `novel-CalculateLayout.sty'.


%% THEORY OF REWORK
%% ----------------------------------------------------------------------------
% When fonts and microtype settings are held constant, pagagraph line breaks
%   are determined by the ratio of font point size to text width.
% Thus, line breaks are preserved by scaling font point size and text width
%   to the same values.
% Text width is determined by the available horizontal space between the outer
%   and inner margins. So, calculate how much this proportionately changes,
%   then (if possible) apply the result to font point size and text width.
% Pagination is determined by lines per page, regardless of header or footer,
%   and regardless of the available vertical space.
%   Thus, lines per page cannot be reworked.
% In general, the aspect ration of available vertical/horizontal space, bounded
%   by the margins, will be different before and after rework. What to do?
% You can choose whether priority is given to maintaining the aspect ratio,
%   or to meeting the new margins.
% If you choose to preserve aspect ratio, it can always be done, but either
%   the horizontal or vertical margins will need to be enlarged over the
%   values specified for rework. This is automatically calculated, and the
%   excess margin will be evenly distributed as needed.
% If you choose to honor the new margins, that may or may not succeed.
% When it succeeds, then the new baselineskip will be larger or smaller
%   than it was before, in relation to font point size.
% When it does not succeed, it is because the minimum baselineskip, in relation
%   to font point size, cannot squeeze the lines into available vertical space.
%   In this case, the new font point size will be reduced even more, so that
%   the lines fit at minimum baselineskip. Then the txt width is reduced,
%   to preserve line breaks. The excess side margin is distributed.
%%
% A few values from the original calculation must be stored:
\newlength\@OriginalEmSize
  \gsetlength\@OriginalEmSize{\@NormalEmSize}
\newlength\@OriginalTextWidth % same as original available width
  \gsetlength\@OriginalTextWidth{\textwidth}
\newlength\@OriginalHeight % includes header/footer
  \gsetlength\@OriginalHeight{\@AvailableHeight}
\newlength\@OriginalBaselineSkip
  \gsetlength\@OriginalBaselineSkip{\baselineskip}
% Change the values of trim size and margins, as requested.
% If not changed, same as before:
\if@ReworkTrimSize
  \gsetlength\@TrimWidth{\@NewTrimWidth}
  \gsetlength\@TrimHeight{\@NewTrimHeight}
\fi
\if@ReworkMargins
  \gsetlength\@TopMargin{\@NewTopMargin}
  \gsetlength\@OuterMargin{\@NewOuterMargin}
  \gsetlength\@BottomMargin{\@NewBottomMargin}
  \gsetlength\@InnerMargin{\@NewInnerMargin}
\fi
% Re-calculate:
\gsetlength\@AvailableWidth{\@TrimWidth-\@OuterMargin-\@InnerMargin}
\gsetlength\@AvailableHeight{\@TrimHeight-\@TopMargin-\@BottomMargin}
%%


%%
\if@AspectPriority
  \edef\@TWratio{\fpeval{\@AvailableWidth/\@OriginalTextWidth}}
  \edef\@THratio{\fpeval{\@AvailableHeight/\@OriginalHeight}}
  \FPmin{\@TMratio}{\@TWratio}{\@THratio}
  \gsetlength\textwidth{\@TMratio\@OriginalTextWidth}
  \gsetlength\@NormalEmSize{\@TMratio\@OriginalEmSize}
  \gsetlength\baselineskip{\@TMratio\@OriginalBaselineSkip}
  % Find whether limiting factor is width or height:
  \ifdimcomp{\@THratio-\@THratio}{<}{0pt}{%
    \gsetlength\@OuterMargin{\fpeval{\@OuterMargin+0.5\@AvailableWidth-0.5\textwidth}}
    \gsetlength\@InnerMargin{\fpeval{\@InnerMargin+0.5\@AvailableWidth-0.5\textwidth}}
    \setlength\@tempLength{0.5\@AvailableWidth-0.5\textwidth}
    \FPround{\@tempN}{\strip@pt\@tempLength}{2}
    \setlength\@tempLength{\@tempN pt}
    \FPround{\@tempN}{\@TMratio}{4}
    \typeout{^^JClass `novel' Info: Rework preserving aspect ratio. ^^J%
      Each side margin \the\@tempLength\space over requested rework value. ^^J%
      Scale \@tempN\space applied to text size and baselineskip. ^^J%
    }
  }{%
    %\setlength\@tempLength{\@AvailableHeight-\@AdjLPP\baselineskip}
    %\setlength\@tempLength{\@tempLength-\baselineskip+\@NormalEmSize}
    %\setlength\@tempLength{0.5\@tempLength}

    \setlength\@tempLength{\fpeval{0.5(\@AvailableHeight-\@AdjLPP\baselineskip-\baselineskip+\@NormalEmSize)}}
    \gsetlength{\@TopMargin}{\@TopMargin+\@tempLength}
    \gsetlength{\@BottomMargin}{\@BottomMargin+\@tempLength}
    \FPround{\@tempN}{\strip@pt\@tempLength}{2}
    \setlength\@tempLength{\@tempN pt}
    \FPround{\@tempN}{\@TMratio}{4}
    \typeout{^^JClass `novel' Info: Rework preserving aspect ratio. ^^J Each%
      vertical margin \the\@tempLength\space over requested rework value. ^^J%
      Scale \@tempN\space applied to text size and baselineskip. ^^J%
    }
  } % end \ifdimcomp
\else % margins priority:
  % Discover what happens if scaled according to text width:
  \gsetlength\textwidth{\@AvailableWidth}
  \edef\@TWratio{\fpeval{\textwidth/\@OriginalTextWidth}}
  \gsetlength\@NormalEmSize{\@TWratio\@OriginalEmSize}
  \gsetlength\baselineskip{1.2\@NormalEmSize} % test for least allowable
  \setlength\@tempLength{\@AdjLPP\baselineskip}
  \ifdimcomp{\@AvailableHeight-\@tempLength}{<}{0pt}{%
    % Will not fit vertically, so will need to re-scale \@NormalEmSize.
    \gsetlength\@NormalEmSize{\@OriginalEmSize}
    \gsetlength\baselineskip{\fpeval{\@AvailableHeight/(\@AdjLPP+1.3)}pt}
    \FPdiv\@THratio{\strip@pt\baselineskip}{\strip@pt\@OriginalBaselineSkip}
    \gsetlength\@NormalEmSize{0.8333\baselineskip} % 0.8333 = 1/1.2, tight skip
    \FPdiv{\@tempN}{\strip@pt\@NormalEmSize}{\strip@pt\@OriginalEmSize}
    \gsetlength\textwidth{\@tempN\@OriginalTextWidth}
    \gsetlength\@OuterMargin{%
      0.5\@OuterMargin+0.5\@TrimWidth-0.5\@InnerMargin-0.5\textwidth%
    }
    \gsetlength\@InnerMargin{%
      0.5\@InnerMargin+0.5\@TrimWidth-0.5\@OuterMargin-0.5\textwidth%
    }
    \FPround{\@ActualOuterN}{\strip@pt\@OuterMargin}{2}
    \FPround{\@ActualInnerN}{\strip@pt\@InnerMargin}{2}
    \FPmul{\@TWratio}{\@TWratio}{\@THratio}
    \FPmul{\@THratio}{\@TWratio}{1.2}
    \FPround{\@TWratio}{\@TWratio}{4}
    \FPround{\@THratio}{\@THratio}{4}
    \typeout{^^JClass `novel' Info: Reworked side margins enlarged. ^^J%
      Actual Outer Margin is now \@ActualOuterN pt. ^^J%
      Actual Inner Margin is now \@ActualInnerN pt. ^^J%
      Scale \@TWratio\space applied to text, ^^J%
      \@THratio\space applied to baselineskip. ^^J%
    }%
  }{% Fits vertically. Keep \@NormalEmSize. Calculate \baselineskip to fit:
      \gsetlength\baselineskip{\fpeval{(\@AvailableHeight-1.3*\@NormalEmSize)/\@AdjLPP}pt}
      \FPdiv{\@BLratio}{\strip@pt\baselineskip}{\strip@pt\@OriginalBaselineSkip}
      \FPround{\@BLratio}{\@BLratio}{4}
      \FPround{\@TWratio}{\@TWratio}{4}
      \typeout{^^JClass `novel' Info: Rework was able to fit new margins. ^^J%
        Scale applied to font size: \@TWratio. ^^J%
        Scale applied to baselineskip: \@BLratio. ^^J%
      }%
  }% end \ifdimcomp.
\fi
%%


%% End of file `novel-ReworkLayout.sty'.


